{"ast":null,"code":"import axios from \"axios\";\nimport { all, fork, put, takeLatest, delay } from \"redux-saga/effects\";\nimport shortId from \"shortid\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_SUCCESS, ADD_COMMENT_REQUEST, ADD_POST_FAILURE, ADD_POST_SUCCESS, ADD_POST_REQUEST, REMOVE_POST_REQUEST } from \"../reducers/post\";\nimport { ADD_POST_TO_ME } from \"../reducers/user\";\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    // dispatch === put\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction removePostAPI(data) {\n  return axios.delete(\"/api/post\", data);\n}\nfunction* removePost(action) {\n  try {\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    // dispatch === put\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    // dispatch === put\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["axios","all","fork","put","takeLatest","delay","shortId","ADD_COMMENT_FAILURE","ADD_COMMENT_SUCCESS","ADD_COMMENT_REQUEST","ADD_POST_FAILURE","ADD_POST_SUCCESS","ADD_POST_REQUEST","REMOVE_POST_REQUEST","ADD_POST_TO_ME","addPostAPI","data","post","addPost","action","id","generate","type","content","err","response","removePostAPI","delete","removePost","addCommentAPI","postId","addComment","watchAddPost","watchRemovePost","watchAddComment","postSaga"],"sources":["/Users/a123/Desktop/study-react/NodeBird-SNS/frontend/sagas/post.js"],"sourcesContent":["import axios from \"axios\";\nimport { all, fork, put, takeLatest, delay } from \"redux-saga/effects\";\nimport shortId from \"shortid\";\nimport {\n  ADD_COMMENT_FAILURE,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_REQUEST,\n  ADD_POST_FAILURE,\n  ADD_POST_SUCCESS,\n  ADD_POST_REQUEST,\n  REMOVE_POST_REQUEST,\n} from \"../reducers/post\";\nimport { ADD_POST_TO_ME } from \"../reducers/user\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data,\n      },\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id,\n    });\n  } catch (err) {\n    // dispatch === put\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(\"/api/post\", data);\n}\n\nfunction* removePost(action) {\n  try {\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data,\n      },\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id,\n    });\n  } catch (err) {\n    // dispatch === put\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    // dispatch === put\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchRemovePost), fork(watchAddComment)]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}