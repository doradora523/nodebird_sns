{"ast":null,"code":"var _jsxFileName = \"/Users/a123/Desktop/study-react/NodeBird-SNS/frontend/components/PostCard.jsx\";\nvar __jsx = React.createElement;\nimport { Card, Popover, Button } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PostImages from \"./PostImages\";\nconst PostCard = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(React.Fragment, null, __jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, id && post.me.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 23\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 23\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    })))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }, post.me.nickname[0]),\n    title: post.me.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n};\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["Card","Popover","Button","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","React","useSelector","PropTypes","PostImages","PostCard","post","id","state","user","me","Images","nickname","content","propTypes","shape","number","User","object","string","createdAt","Comments","arrayOf","isRequired"],"sources":["/Users/a123/Desktop/study-react/NodeBird-SNS/frontend/components/PostCard.jsx"],"sourcesContent":["import { Card, Popover, Button} from \"antd\";\nimport {\n  RetweetOutlined,\n  HeartOutlined,\n  MessageOutlined,\n  EllipsisOutlined,\n} from \"@ant-design/icons\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PostImages from \"./PostImages\";\n\nconst PostCard = ({ post }) => {\n  \n  const id = useSelector((state) => state.user.me?.id);\n  return (\n    <div>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <>\n            <RetweetOutlined key=\"retweet\" />\n            <HeartOutlined key=\"heart\" />\n            <MessageOutlined key=\"comment\" />\n            <Popover\n              key=\"more\"\n              content={\n                <Button.Group>\n                  {id && post.me.id === id ? (\n                    <>\n                      <Button>수정</Button>\n                      <Button type=\"danger\">삭제</Button>\n                    </>\n                  ) : (\n                    <Button>신고</Button>\n                  )}\n                </Button.Group>\n              }\n            >\n              <EllipsisOutlined />\n            </Popover>\n          </>,\n        ]}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.me.nickname[0]}</Avatar>}\n          title={post.me.nickname}\n          description={post.content}\n        />\n      </Card>\n      {/* <CommentForm />\n      <Comments /> */}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default PostCard;\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,OAAO,EAAEC,MAAM,QAAO,MAAM;AAC3C,SACEC,eAAe,EACfC,aAAa,EACbC,eAAe,EACfC,gBAAgB,QACX,mBAAmB;AAC1B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,cAAc;AAErC,MAAMC,QAAQ,GAAG,CAAC;EAAEC;AAAK,CAAC,KAAK;EAE7B,MAAMC,EAAE,GAAGL,WAAW,CAAEM,KAAK;IAAA;IAAA,yBAAKA,KAAK,CAACC,IAAI,CAACC,EAAE,mDAAb,eAAeH,EAAE;EAAA,EAAC;EACpD,OACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,IAAI;IACH,KAAK,EAAED,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC,IAAI,MAAC,UAAU;MAAC,MAAM,EAAEL,IAAI,CAACK,MAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAI;IAC7D,OAAO,EAAE,CACP,4BACE,MAAC,eAAe;MAAC,GAAG,EAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,EACjC,MAAC,aAAa;MAAC,GAAG,EAAC,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,EAC7B,MAAC,eAAe;MAAC,GAAG,EAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,EACjC,MAAC,OAAO;MACN,GAAG,EAAC,MAAM;MACV,OAAO,EACL,MAAC,MAAM,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACVJ,EAAE,IAAID,IAAI,CAACI,EAAE,CAACH,EAAE,KAAKA,EAAE,GACtB,4BACE,MAAC,MAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,kBAAY,EACnB,MAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,kBAAY,CAChC,GAEH,MAAC,MAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,kBACR,CAEJ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAED,MAAC,gBAAgB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACZ,CACT,CACH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEF,MAAC,IAAI,CAAC,IAAI;IACR,MAAM,EAAE,MAAC,MAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAED,IAAI,CAACI,EAAE,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAW;IAC/C,KAAK,EAAEN,IAAI,CAACI,EAAE,CAACE,QAAS;IACxB,WAAW,EAAEN,IAAI,CAACO,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC1B,CACG,CAGH;AAEV,CAAC;AAEDR,QAAQ,CAACS,SAAS,GAAG;EACnBR,IAAI,EAAEH,SAAS,CAACY,KAAK,CAAC;IACpBR,EAAE,EAAEJ,SAAS,CAACa,MAAM;IACpBC,IAAI,EAAEd,SAAS,CAACe,MAAM;IACtBL,OAAO,EAAEV,SAAS,CAACgB,MAAM;IACzBC,SAAS,EAAEjB,SAAS,CAACe,MAAM;IAC3BG,QAAQ,EAAElB,SAAS,CAACmB,OAAO,CAACnB,SAAS,CAACe,MAAM,CAAC;IAC7CP,MAAM,EAAER,SAAS,CAACmB,OAAO,CAACnB,SAAS,CAACe,MAAM;EAC5C,CAAC,CAAC,CAACK;AACL,CAAC;AAED,eAAelB,QAAQ"},"metadata":{},"sourceType":"module"}