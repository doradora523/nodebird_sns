{"ast":null,"code":"import axios from \"axios\";\nimport { all, fork, put, takeLatest, delay } from \"redux-saga/effects\";\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    // dispatch === put\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction addCommentAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    // dispatch === put\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["axios","all","fork","put","takeLatest","delay","addPostAPI","data","post","addPost","action","type","ADD_POST_SUCCESS","result","err","ADD_POST_FAILURE","response","addCommentAPI","addComment","watchAddPost","ADD_POST_REQUEST","watchAddComment","ADD_COMMENT_REQUEST","postSaga"],"sources":["/Users/a123/Desktop/study-react/NodeBird-SNS/frontend/sagas/post.js"],"sourcesContent":["import axios from \"axios\";\nimport { all, fork, put, takeLatest, delay } from \"redux-saga/effects\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    // dispatch === put\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\nfunction addCommentAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    // dispatch === put\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAEC,UAAU,EAAEC,KAAK,QAAQ,oBAAoB;AAEtE,SAASC,UAAU,CAACC,IAAI,EAAE;EACxB,OAAOP,KAAK,CAACQ,IAAI,CAAC,WAAW,EAAED,IAAI,CAAC;AACtC;AAEA,UAAUE,OAAO,CAACC,MAAM,EAAE;EACxB,IAAI;IACF;IACA,MAAML,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMF,GAAG,CAAC;MACRQ,IAAI,EAAEC,gBAAgB;MACtBL,IAAI,EAAEM,MAAM,CAACN;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZ;IACA,MAAMX,GAAG,CAAC;MACRQ,IAAI,EAAEI,gBAAgB;MACtBR,IAAI,EAAEO,GAAG,CAACE,QAAQ,CAACT;IACrB,CAAC,CAAC;EACJ;AACF;AACA,SAASU,aAAa,CAACV,IAAI,EAAE;EAC3B,OAAOP,KAAK,CAACQ,IAAI,CAAC,WAAW,EAAED,IAAI,CAAC;AACtC;AAEA,UAAUW,UAAU,CAACR,MAAM,EAAE;EAC3B,IAAI;IACF;IACA,MAAML,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMF,GAAG,CAAC;MACRQ,IAAI,EAAEC,gBAAgB;MACtBL,IAAI,EAAEM,MAAM,CAACN;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZ;IACA,MAAMX,GAAG,CAAC;MACRQ,IAAI,EAAEI,gBAAgB;MACtBR,IAAI,EAAEO,GAAG,CAACE,QAAQ,CAACT;IACrB,CAAC,CAAC;EACJ;AACF;AACA,UAAUY,YAAY,GAAG;EACvB,MAAMf,UAAU,CAACgB,gBAAgB,EAAEX,OAAO,CAAC;AAC7C;AAEA,UAAUY,eAAe,GAAG;EAC1B,MAAMjB,UAAU,CAACkB,mBAAmB,EAAEJ,UAAU,CAAC;AACnD;AAEA,eAAe,UAAUK,QAAQ,GAAG;EAClC,MAAMtB,GAAG,CAAC,CAACC,IAAI,CAACiB,YAAY,CAAC,EAAEjB,IAAI,CAACmB,eAAe,CAAC,CAAC,CAAC;AACxD"},"metadata":{},"sourceType":"module"}