{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { HYDRATE } from \"next-redux-wrapper\";\n// 리덕스 서버사이드 렌더링을 위해서 HYDRATE 를 넣어줌 (index Reducer)\n\nexport var initialState = {\n  isLoggedIn: false,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\n\n// action creator\nexport var loginAction = function loginAction(data) {\n  return {\n    type: \"LOG_IN\",\n    data: data\n  };\n};\nexport var logoutAction = function logoutAction() {\n  return {\n    type: \"LOG_OUT\"\n  };\n};\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"LOG_IN\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true,\n        me: action.data\n      });\n    case \"LOG_OUT\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false,\n        me: null\n      });\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","initialState","isLoggedIn","me","signUpData","loginData","loginAction","data","type","logoutAction","rootReducer","state","action"],"sources":["/Users/a123/Desktop/study-react/NodeBird-SNS/frontend/reducers/index.js"],"sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\n// 리덕스 서버사이드 렌더링을 위해서 HYDRATE 를 넣어줌 (index Reducer)\n\nexport const initialState = {\n  isLoggedIn: false,\n  me: null,\n  signUpData: {},\n  loginData: {},\n};\n\n// action creator\nexport const loginAction = (data) => {\n  return {\n    type: \"LOG_IN\",\n    data,\n  };\n};\nexport const logoutAction = () => {\n  return {\n    type: \"LOG_OUT\",\n  };\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOG_IN\":\n      return {\n        ...state,\n        isLoggedIn: true,\n        me: action.data,\n      };\n    case \"LOG_OUT\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        me: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n"],"mappings":";;;AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C;;AAEA,OAAO,IAAMC,YAAY,GAAG;EAC1BC,UAAU,EAAE,KAAK;EACjBC,EAAE,EAAE,IAAI;EACRC,UAAU,EAAE,CAAC,CAAC;EACdC,SAAS,EAAE,CAAC;AACd,CAAC;;AAED;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIC,IAAI,EAAK;EACnC,OAAO;IACLC,IAAI,EAAE,QAAQ;IACdD,IAAI,EAAJA;EACF,CAAC;AACH,CAAC;AACD,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAY,GAAS;EAChC,OAAO;IACLD,IAAI,EAAE;EACR,CAAC;AACH,CAAC;AAED,IAAME,WAAW,GAAG,SAAdA,WAAW,GAAqC;EAAA,IAAjCC,KAAK,uEAAGV,YAAY;EAAA,IAAEW,MAAM;EAC/C,QAAQA,MAAM,CAACJ,IAAI;IACjB,KAAK,QAAQ;MACX,uCACKG,KAAK;QACRT,UAAU,EAAE,IAAI;QAChBC,EAAE,EAAES,MAAM,CAACL;MAAI;IAEnB,KAAK,SAAS;MACZ,uCACKI,KAAK;QACRT,UAAU,EAAE,KAAK;QACjBC,EAAE,EAAE;MAAI;IAEZ;MACE,OAAOQ,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}