{"ast":null,"code":"var _jsxFileName = \"/Users/a123/Desktop/study-react/NodeBird-SNS/frontend/components/LoginForm.jsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginRequestAction } from \"../reducers/user\";\nimport { Form, Input, Button } from \"antd\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport useInput from \"../hooks/useInput\";\nconst ButtonWrapper = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"LoginForm__ButtonWrapper\",\n  componentId: \"sc-tkwioy-0\"\n})([\"margin-top:10px;\"]);\nconst FormWrapper = /*#__PURE__*/styled(Form).withConfig({\n  displayName: \"LoginForm__FormWrapper\",\n  componentId: \"sc-tkwioy-1\"\n})([\"padding:10px;\"]);\n\n// const style = useMemo(() => ({ marginTop: 10 }), []);\n// useMemo를 이용한 리렌더링 막는 방법\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const {\n    logInLoading\n  } = useSelector(state => state.user);\n  const [id, onChangeId] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n  const onSubmitForm = useCallback(() => {\n    console.log(id, password);\n    dispatch(loginRequestAction({\n      id,\n      password\n    }));\n  }, [id, password]);\n  return __jsx(FormWrapper, {\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    type: \"email\",\n    value: email,\n    onChange: onChangeId,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    value: password,\n    type: \"password\",\n    onChange: onChangePassword,\n    autoComplete: \"on\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), __jsx(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: logInLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))));\n};\nexport default LoginForm;","map":{"version":3,"names":["React","useCallback","useDispatch","useSelector","loginRequestAction","Form","Input","Button","Link","styled","useInput","ButtonWrapper","div","FormWrapper","LoginForm","dispatch","logInLoading","state","user","id","onChangeId","password","onChangePassword","onSubmitForm","console","log","email"],"sources":["/Users/a123/Desktop/study-react/NodeBird-SNS/frontend/components/LoginForm.jsx"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginRequestAction } from \"../reducers/user\";\nimport { Form, Input, Button } from \"antd\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\n\nimport useInput from \"../hooks/useInput\";\n\nconst ButtonWrapper = styled.div`\n  margin-top: 10px;\n`;\n\nconst FormWrapper = styled(Form)`\n  padding: 10px;\n`;\n\n// const style = useMemo(() => ({ marginTop: 10 }), []);\n// useMemo를 이용한 리렌더링 막는 방법\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const { logInLoading } = useSelector((state) => state.user);\n  const [id, onChangeId] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n\n  const onSubmitForm = useCallback(() => {\n    console.log(id, password);\n    dispatch(loginRequestAction({ id, password }));\n  }, [id, password]);\n\n  return (\n    <FormWrapper onFinish={onSubmitForm}>\n      <div>\n        <label htmlFor=\"user-id\">아이디</label>\n        <br />\n        <Input\n          name=\"user-id\"\n          type=\"email\"\n          value={email}\n          onChange={onChangeId}\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"user-password\">비밀번호</label>\n        <br />\n        <Input\n          name=\"user-password\"\n          value={password}\n          type=\"password\"\n          onChange={onChangePassword}\n          autoComplete=\"on\"\n          required\n        />\n      </div>\n      {/* <ButtonWrapper style={style}> */}\n      <ButtonWrapper>\n        <Button type=\"primary\" htmlType=\"submit\" loading={logInLoading}>\n          로그인\n        </Button>\n        <Link href=\"/signup\">\n          <Button>회원가입</Button>\n        </Link>\n      </ButtonWrapper>\n    </FormWrapper>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,QAAQ,kBAAkB;AACrD,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,MAAM;AAC1C,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,OAAOC,QAAQ,MAAM,mBAAmB;AAExC,MAAMC,aAAa,gBAAGF,MAAM,CAACG,GAAG;EAAA;EAAA;AAAA,wBAE/B;AAED,MAAMC,WAAW,gBAAGJ,MAAM,CAACJ,IAAI,CAAC;EAAA;EAAA;AAAA,qBAE/B;;AAED;AACA;;AAEA,MAAMS,SAAS,GAAG,MAAM;EACtB,MAAMC,QAAQ,GAAGb,WAAW,EAAE;EAC9B,MAAM;IAAEc;EAAa,CAAC,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAC3D,MAAM,CAACC,EAAE,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACW,QAAQ,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEjD,MAAMa,YAAY,GAAGtB,WAAW,CAAC,MAAM;IACrCuB,OAAO,CAACC,GAAG,CAACN,EAAE,EAAEE,QAAQ,CAAC;IACzBN,QAAQ,CAACX,kBAAkB,CAAC;MAAEe,EAAE;MAAEE;IAAS,CAAC,CAAC,CAAC;EAChD,CAAC,EAAE,CAACF,EAAE,EAAEE,QAAQ,CAAC,CAAC;EAElB,OACE,MAAC,WAAW;IAAC,QAAQ,EAAEE,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAClC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAO,OAAO,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBAAY,EACpC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAM,EACN,MAAC,KAAK;IACJ,IAAI,EAAC,SAAS;IACd,IAAI,EAAC,OAAO;IACZ,KAAK,EAAEG,KAAM;IACb,QAAQ,EAAEN,UAAW;IACrB,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACR,CACE,EACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAO,OAAO,EAAC,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BAAa,EAC3C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAM,EACN,MAAC,KAAK;IACJ,IAAI,EAAC,eAAe;IACpB,KAAK,EAAEC,QAAS;IAChB,IAAI,EAAC,UAAU;IACf,QAAQ,EAAEC,gBAAiB;IAC3B,YAAY,EAAC,IAAI;IACjB,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACR,CACE,EAEN,MAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACZ,MAAC,MAAM;IAAC,IAAI,EAAC,SAAS;IAAC,QAAQ,EAAC,QAAQ;IAAC,OAAO,EAAEN,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBAEtD,EACT,MAAC,IAAI;IAAC,IAAI,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAClB,MAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,8BAAc,CAChB,CACO,CACJ;AAElB,CAAC;AAED,eAAeF,SAAS"},"metadata":{},"sourceType":"module"}