{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"../reducers\";\nimport rootSaga from '../sagas';\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddlewares, loggerMiddleware];\n  // redux의 기능 확장 = enhancer\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) // 배포용\n  : composeWithDevTools(applyMiddleware(...middlewares)); // 개발용\n\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","createStore","applyMiddleware","compose","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","sagaMiddlewares","enhancer","store","sagaTask","run","wrapper","debug"],"sources":["/Users/a123/Desktop/study-react/NodeBird-SNS/frontend/store/configureStore.js"],"sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport reducer from \"../reducers\";\nimport rootSaga from '../sagas'\n\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n  console.log(action);\n  return next(action)\n}\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddlewares, loggerMiddleware]\n  // redux의 기능 확장 = enhancer\n  const enhancer =\n    process.env.NODE_ENV === \"production\"\n      ? compose(applyMiddleware(...middlewares)) // 배포용\n      : composeWithDevTools(applyMiddleware(...middlewares)); // 개발용\n\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga)\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,WAAW,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC7D,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,OAAOC,OAAO,MAAM,aAAa;AACjC,OAAOC,QAAQ,MAAM,UAAU;AAE/B,MAAMC,gBAAgB,GAAG,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAMC,IAAI,IAAMC,MAAM,IAAK;EACzEC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,OAAOD,IAAI,CAACC,MAAM,CAAC;AACrB,CAAC;AAED,MAAMG,cAAc,GAAG,MAAM;EAC3B,MAAMC,cAAc,GAAGX,oBAAoB,EAAE;EAC7C,MAAMY,WAAW,GAAG,CAACC,eAAe,EAAEV,gBAAgB,CAAC;EACvD;EACA,MAAMW,QAAQ,GACZ,QACIhB,OAAO,CAACD,eAAe,CAAC,GAAGe,WAAW,CAAC,CAAC,CAAC;EAAA,EACzCb,mBAAmB,CAACF,eAAe,CAAC,GAAGe,WAAW,CAAC,CAAC,CAAC,CAAC;;EAE5D,MAAMG,KAAK,GAAGnB,WAAW,CAACK,OAAO,EAAEa,QAAQ,CAAC;EAC5CC,KAAK,CAACC,QAAQ,GAAGL,cAAc,CAACM,GAAG,CAACf,QAAQ,CAAC;EAC7C,OAAOa,KAAK;AACd,CAAC;AAED,MAAMG,OAAO,GAAGvB,aAAa,CAACe,cAAc,EAAE;EAC5CS,KAAK;AACP,CAAC,CAAC;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}